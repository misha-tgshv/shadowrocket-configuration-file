name: Generate shadowrocket rules

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"
  push:
    branches:
      - main

jobs:
  build_and_publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}

      # --- Создание папок ---
      - name: Создаем папки для артефактов
        run: |
          mkdir -p rules scripts modules conf

      # --- Генерация файлов ---
      - name: Генерируем domains_community.list
        run: |
          curl -s https://raw.githubusercontent.com/misha-tgshv/shadowrocket-configuration-file/main/source/community.list \
            | awk 'NR==1 {print "# NAME: domains_community.list"}
                   NR==2 {print "# AUTHOR: misha-tgshv"}
                   NR==3 {print "# REPO: https://github.com/misha-tgshv/shadowrocket-configuration-file"}
                   NR==4 {print "# UPDATED: " strftime("%Y-%m-%d %H:%M:%S", systime(), 1) " MSK"}
                   NR==5 {print "# SOURCE: https://github.com/misha-tgshv/shadowrocket-configuration-file/blob/main/community.list"}
                   NR>5 {
                     if ($0 ~ /#gemini/) {print "DOMAIN-KEYWORD," $0; next}
                     if (NR==2 || NR==3 || NR==4) {print "DOMAIN-KEYWORD," $0; next}
                     if (NR==5) {print "DOMAIN," $0; next}
                     if (NR==8) {print "URL-REGEX," $0; next}
                     if (!/^#/ && NF>0) {print "DOMAIN-SUFFIX," $0; next}
                     if (/^#/ || NF==0) {print $0}
                   }' > rules/domains_community.list

      - name: Генерируем domains_antifilter.list
        run: |
          curl -sSL https://community.antifilter.download/list/domains.lst \
            | sed -E 's/^\+\./DOMAIN-SUFFIX,/; s/^[^D]/DOMAIN-SUFFIX,&/' \
            | sed '/www|spotify.com/d' \
            | awk '!seen[$0]++' > temp_list.txt
          echo "# Количество доменов: $(wc -l < temp_list.txt)" > rules/domains_antifilter.list
          cat temp_list.txt >> rules/domains_antifilter.list
          rm temp_list.txt

      - name: Генерируем ips_antifilter.list
        run: |
          curl -s https://community.antifilter.download/list/community.lst \
            | sed 's/^/IP-CIDR,/g' \
            | sort -u > temp_aips.txt
          echo "# Количество IP-адресов: $(wc -l < temp_aips.txt)" > rules/ips_antifilter.list
          cat temp_aips.txt >> rules/ips_antifilter.list
          rm temp_aips.txt

      - name: Генерируем domains_refilter.list
        run: |
          curl -s https://raw.githubusercontent.com/1andrevich/Re-filter-lists/main/community.lst > temp.txt
          curl -s https://raw.githubusercontent.com/1andrevich/Re-filter-lists/main/domains_all.lst >> temp.txt
          grep -v "mega555" temp.txt > temp2.txt
          grep -v "spotify.com" temp2.txt > temp3.txt
          rm temp.txt temp2.txt
          echo "# NAME: domains_refilter.list" > rules/domains_refilter.list
          echo "# AUTHOR: misha-tgshv" >> rules/domains_refilter.list
          echo "# REPO: https://github.com/misha-tgshv/shadowrocket-configuration-file" >> rules/domains_refilter.list
          echo "# UPDATED: $(TZ='Europe/Moscow' date '+%Y-%m-%d %H:%M:%S')" MSK >> rules/domains_refilter.list
          echo "# SOURCE: https://github.com/1andrevich/Re-filter-lists" >> rules/domains_refilter.list
          sed 's/^/DOMAIN-SUFFIX,/g' temp3.txt | tee domaintmp
          wc -l < domaintmp | awk '{print "# TOTAL:", $1}' >> rules/domains_refilter.list
          cat domaintmp >> rules/domains_refilter.list
          rm domaintmp temp3.txt

      - name: Генерируем domains_youtube.list
        run: |
          curl -sSL https://raw.githubusercontent.com/dsvip/Quantumult-X/dec9019816ba55897c162c3dbd3ac997ac160f09/blackmatrix7/rule/Shadowrocket/YouTube.list \
            | sed -n '/DOMAIN-SUFFIX,/p' > rules/domains_youtube.list
          sed -i "1s/^/DOMAIN-KEYWORD,youtube\n/" rules/domains_youtube.list
          sed -i "1s/^/DOMAIN-KEYWORD,googlevideo\n/" rules/domains_youtube.list

      - name: Генерируем domains_discord.list
        run: |
          curl -sSL https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Shadowrocket/Discord/Discord.list \
            | sed -n '/DOMAIN-SUFFIX,/p' > rules/domains_discord.list
          sed -i "1s/^/DOMAIN-KEYWORD,discord\n/" rules/domains_discord.list
          sed -i "1s/^/DOMAIN-KEYWORD,discordapp\n/" rules/domains_discord.list

      - name: Генерируем ips_refilter.list
        run: |
          curl -s https://raw.githubusercontent.com/1andrevich/Re-filter-lists/refs/heads/main/community_ips.lst > ips1.txt
          curl -s https://raw.githubusercontent.com/1andrevich/Re-filter-lists/refs/heads/main/discord_ips.lst >> ips1.txt
          curl -s https://raw.githubusercontent.com/1andrevich/Re-filter-lists/refs/heads/main/ipsum.lst >> ips1.txt
          sed 's/^/IP-CIDR,/g' ips1.txt | sort -u > temp_ips.list
          echo "# Количество IP-адресов: $(wc -l < temp_ips.list)" > rules/ips_refilter.list
          cat temp_ips.list >> rules/ips_refilter.list
          rm ips1.txt temp_ips.list

      - name: Генерируем domains_banking.list
        run: |
          curl -s https://www.cbr.ru/banking_sector/credit/cowebsites/ | \
          grep -oP 'href="\K[^"]+' | \
          grep '^http' | \
          sed -E '/(t\.me|vk\.com|ok\.ru|telegram|dzen|twitter|youtube|zen\.yandex\.ru|rutube\.ru|linkedin)/d' | \
          sed 's/^https\?:\/\///' | \
          sed 's/\/.*//' | \
          sort -u | sed 's/^/DOMAIN-SUFFIX,/' > rules/domains_banking.list

      # --- Генерация скриптов ---
      - name: Генерируем rewrite.youtube.response.preview.js
        run: |
          curl -sSL "https://raw.githubusercontent.com/Maasea/sgmodule/refs/heads/master/Script/Youtube/youtube.response.js" > temp.txt
          sed 's/;e!/;e/g' temp.txt > scripts/rewrite.youtube.response.preview.js
          rm temp.txt

      # --- Генерация модулей ---
      - name: Получаем даты последних изменений
        run: |
          YT_MODULE_DATE=$(curl -s "https://api.github.com/repos/YanbingJiang/Shadowrocket_diy_rules/commits?path=Modules/YT-Premium-V1.module&page=1&per_page=1" | jq -r '.[0].commit.committer.date' | cut -d'T' -f1)
          YT_SCRIPT_DATE=$(curl -s "https://api.github.com/repos/Maasea/sgmodule/commits?path=Script/Youtube/youtube.response.js&page=1&per_page=1" | jq -r '.[0].commit.committer.date' | cut -d'T' -f1)
          echo "YT_MODULE_DATE=$YT_MODULE_DATE" >> $GITHUB_ENV
          echo "YT_SCRIPT_DATE=$YT_SCRIPT_DATE" >> $GITHUB_ENV

      - name: Генерируем YT-Premium-V1-RU.module
        run: |
          curl -sSL https://raw.githubusercontent.com/YanbingJiang/Shadowrocket_diy_rules/refs/heads/main/Modules/YT-Premium-V1.module \
            | sed -E 's/captionLang:zh-Hans/captionLang:off/g; s/lyricLang:zh-Hans/lyricLang:off/g' \
            | sed "1i# Last modified youtube.response.js: ${{ env.YT_SCRIPT_DATE }}" \
            | sed "1i# Last modified YT-Premium-V1: ${{ env.YT_MODULE_DATE }}" > modules/YT-Premium-V1-RU.module

      # --- Генерация конфигов ---
      - name: Создаем sr_ru_basic.conf с заменой update-url в копии general
        run: |
          CONFNAME="sr_ru_basic.conf"
          cp source/General.txt conf/General.tmp
          sed -i "s|^update-url =.*|update-url = https://cdn.jsdelivr.net/gh/misha-tgshv/shadowrocket-configuration-file@main/conf/${CONFNAME}|" conf/General.tmp

          {
            cat conf/General.tmp
            echo "# Выборочные правила маршрутизации"
            echo "[Rule]"
            echo "# Список доменов телеграм-чата «Про Shadowrocket на русском»"
            echo "RULE-SET,https://raw.githubusercontent.com/misha-tgshv/shadowrocket-configuration-file/main/rules/domains_community.list,PROXY"
            echo "RULE-SET,https://raw.githubusercontent.com/misha-tgshv/shadowrocket-configuration-file/main/rules/domains_refilter.list,PROXY"
            echo "RULE-SET,https://raw.githubusercontent.com/misha-tgshv/shadowrocket-configuration-file/main/rules/ips_refilter.list,PROXY,no-resolve"
            echo "RULE-SET,https://raw.githubusercontent.com/misha-tgshv/shadowrocket-configuration-file/main/rules/domains_discord.list,PROXY"
            echo "RULE-SET,https://raw.githubusercontent.com/helmiau/clashrules/refs/heads/main/shadowrocket/Game_Discord_Ports.list,PROXY"
            echo "FINAL,DIRECT"
          } > conf/${CONFNAME}

          sed -i "1s/^/# @misha-tgshv, built on $(TZ=\"Asia/Novokuznetsk\" date)\n/" conf/${CONFNAME}
          rm conf/General.tmp

      - name: Создаем sr_nonru_basic.conf с заменой update-url
        run: |
          CONFNAME="sr_nonru_basic.conf"
          cp source/General.txt conf/General.tmp
          sed -i "s|^update-url =.*|update-url = https://cdn.jsdelivr.net/gh/misha-tgshv/shadowrocket-configuration-file@main/conf/${CONFNAME}|" conf/General.tmp

          {
            cat conf/General.tmp
            echo "# Выборочные правила маршрутизации"
            echo "[Rule]"
            echo "DOMAIN-SUFFIX,ru,PROXY"
            echo "DOMAIN-SUFFIX,su,PROXY"
            echo "DOMAIN-SUFFIX,рф,PROXY"
            echo "DOMAIN-KEYWORD,.ru,PROXY"
            echo "DOMAIN-KEYWORD,.su,PROXY"
            echo "DOMAIN-KEYWORD,.рф,PROXY"
            echo "FINAL,DIRECT"
          } > conf/${CONFNAME}

          sed -i "1s/^/# @misha-tgshv, built on $(TZ=\"Asia/Novokuznetsk\" date)\n/" conf/${CONFNAME}
          rm conf/General.tmp

      - name: Создаем sr_ru_mini.conf с заменой update-url
        run: |
          CONFNAME="sr_ru_mini.conf"
          cp source/General.txt conf/General.tmp
          sed -i "s|^update-url =.*|update-url = https://cdn.jsdelivr.net/gh/misha-tgshv/shadowrocket-configuration-file@main/conf/${CONFNAME}|" conf/General.tmp

          {
            cat conf/General.tmp
            echo "# Выборочные правила маршрутизации"
            echo "[Rule]"
            curl -s https://raw.githubusercontent.com/misha-tgshv/shadowrocket-configuration-file/main/source/community.list | awk '
              BEGIN { special_count=0 }
              /^#/ { next }
              NF==0 { next }
              {
                if (special_count < 5) {
                  print "DOMAIN-KEYWORD," $1 ",PROXY"
                  special_count++
                } else {
                  print "DOMAIN-SUFFIX," $1 ",PROXY"
                }
              }
            '
            echo "FINAL,DIRECT"
          } > conf/${CONFNAME}

          sed -i "1s/^/# mini conf, @misha-tgshv, built on $(TZ=\"Asia/Novokuznetsk\" date)\n/" conf/${CONFNAME}
          sed -i '1G' conf/${CONFNAME}
          rm conf/General.tmp

      - name: Создаем sr_ru_extended.conf без update-url и с пустыми строками после [Rule]
        run: |
          CONFNAME="sr_ru_extended.conf"
          cp source/General.txt conf/General.tmp
          
          # Удаляем строку update-url, если она там есть
          sed -i '/^update-url =/d' conf/General.tmp

          # Закомментируем строку include = sr_ru_extended.conf
          sed -i 's|^\(include = sr_ru_extended.conf\)|# \1|' conf/General.tmp
      
          {
            cat conf/General.tmp
            echo "# Собственные правила маршрутизации"
            echo "[Rule]"
            echo ""
            echo ""
            echo ""
          } > conf/${CONFNAME}
      
          sed -i "1s/^/# @misha-tgshv, built on $(TZ=\"Asia/Novokuznetsk\" date)\n/" conf/${CONFNAME}
      
          rm conf/General.tmp

      # --- Коммитим и пушим ---
      - name: Настраиваем git
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"

      - name: Добавляем и коммитим новые файлы
        run: |
          git add rules scripts modules conf
          git commit -m "Auto: обновление сгенерированных файлов [skip ci]" || echo "No changes to commit"

      - name: Пушим изменения в main
        run: git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
